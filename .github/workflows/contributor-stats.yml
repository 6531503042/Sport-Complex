name: Update Contributor Stats

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Repository Stats
        id: repo-stats
        run: |
          # Get total stats
          TOTAL_COMMITS=$(git rev-list --count HEAD)
          TOTAL_PRS=$(gh pr list --state all --limit 1000 | wc -l)
          TOTAL_ISSUES=$(gh issue list --state all --limit 1000 | wc -l)
          
          # Get individual stats
          declare -A stats
          for user in "Kritsasoft" "MABiuS1" "kongphop1209" "6531503042" "2547phumiphat" "6531503120"; do
            COMMITS=$(git log --author="$user" --oneline | wc -l)
            PRS=$(gh pr list --author="$user" --state all --limit 1000 | wc -l)
            ISSUES=$(gh issue list --author="$user" --state all --limit 1000 | wc -l)
            stats[$user]="$COMMITS $PRS $ISSUES"
          done
          
          echo "stats=${stats[@]}" >> $GITHUB_OUTPUT
          echo "total=$TOTAL_COMMITS $TOTAL_PRS $TOTAL_ISSUES" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README
        run: |
          # Your existing update logic here, but now including the visualization data
          # Use ${{ steps.repo-stats.outputs.stats }} and ${{ steps.repo-stats.outputs.total }}
          # to generate the charts and badges

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -m "docs: Update repository statistics" || exit 0
          git push